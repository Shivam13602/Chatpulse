AWSTemplateFormatVersion: '2010-09-09'
Description: 'API Gateway WebSocket API for Real-Time Chat Application with Sentiment Insights'

Parameters:
  ConnectionManagerFunctionArn:
    Type: String
    Description: ARN of the connection manager Lambda function
  
  DisconnectManagerFunctionArn:
    Type: String
    Description: ARN of the disconnect manager Lambda function
  
  MessageProcessorFunctionArn:
    Type: String
    Description: ARN of the message processor Lambda function

Resources:
  # WebSocket API
  WebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: RealTimeChatWebSocketApi
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  
  # Stage
  WebSocketStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref WebSocketApi
      StageName: prod
      AutoDeploy: true
  
  # $connect route
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectIntegration
  
  # $disconnect route
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectIntegration
  
  # sendmessage route
  SendMessageRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: SendMessageRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SendMessageIntegration
  
  # Connect integration
  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub 
        - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
        - lambdaArn: !Ref ConnectionManagerFunctionArn
      IntegrationMethod: POST
      ContentHandlingStrategy: CONVERT_TO_TEXT
      PassthroughBehavior: WHEN_NO_MATCH
  
  # Disconnect integration
  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub 
        - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
        - lambdaArn: !Ref DisconnectManagerFunctionArn
      IntegrationMethod: POST
      ContentHandlingStrategy: CONVERT_TO_TEXT
      PassthroughBehavior: WHEN_NO_MATCH
  
  # SendMessage integration
  SendMessageIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub 
        - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
        - lambdaArn: !Ref MessageProcessorFunctionArn
      IntegrationMethod: POST
      ContentHandlingStrategy: CONVERT_TO_TEXT
      PassthroughBehavior: WHEN_NO_MATCH
  
  # Lambda permissions
  ConnectionManagerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ConnectionManagerFunctionArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApi}/*/*
  
  DisconnectManagerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DisconnectManagerFunctionArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApi}/*/*
  
  MessageProcessorPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref MessageProcessorFunctionArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApi}/*/*

Outputs:
  WebSocketApiId:
    Description: WebSocket API ID
    Value: !Ref WebSocketApi
    Export:
      Name: !Sub "${AWS::StackName}-WebSocketApiId"
  
  WebSocketApiEndpoint:
    Description: WebSocket API endpoint URL
    Value: !Sub wss://${WebSocketApi}.execute-api.${AWS::Region}.amazonaws.com/${WebSocketStage}
    Export:
      Name: !Sub "${AWS::StackName}-WebSocketApiEndpoint" 